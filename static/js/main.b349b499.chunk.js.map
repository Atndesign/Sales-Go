{"version":3,"sources":["components/converter/index.jsx","components/result/index.jsx","components/convertApp/index.jsx","App.js","index.js"],"names":["Converter","props","state","percentage","price","key","value","this","setState","className","htmlFor","id","type","placeholder","onChange","e","inputHandler","target","onClick","calculate","React","Component","Result","result","ConvertApp","bind","inputThis","preventDefault","srcSet","src","width","height","App","ReactDOM","render","document","getElementById"],"mappings":"iRA6BeA,E,YAzBX,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,WAAY,GACZC,MAAO,IAJG,E,0EAOLC,EAAIC,GACbC,KAAKC,SAAL,eACKH,EAAMC,M,+BAGN,IAAD,OACJ,OACI,0BAAMG,UAAU,aACZ,2BAAOA,UAAU,mBAAmBC,QAAQ,cAA5C,aACA,2BAAOJ,MAAOC,KAAKL,MAAMC,WAAYM,UAAU,oBAAoBE,GAAG,aAAaC,KAAK,SAASC,YAAY,sBAAsBC,SAAU,SAAAC,GAAC,OAAI,EAAKC,aAAa,aAAaD,EAAEE,OAAOX,UAC1L,2BAAOG,UAAU,mBAAmBC,QAAQ,SAA5C,MACA,2BAAOJ,MAAOC,KAAKL,MAAME,MAAOK,UAAU,oBAAoBE,GAAG,QAAQC,KAAK,SAASC,YAAY,sBAAsBC,SAAU,SAAAC,GAAC,OAAI,EAAKC,aAAa,QAAQD,EAAEE,OAAOX,UAC3K,4BAAQG,UAAU,iBAAiBS,QAAS,SAAAH,GAAC,OAAI,EAAKd,MAAMkB,UAAU,EAAKjB,MAAMC,WAAY,EAAKD,MAAME,MAAOW,EAAG,KAAlH,kB,GApBQK,IAAMC,WCafC,E,YAbX,WAAYrB,GAAO,qEACTA,I,sEAGN,OACI,yBAAKQ,UAAU,UACX,uBAAGA,UAAU,gBAAb,gBACA,uBAAGA,UAAU,kBAAkBF,KAAKN,MAAMsB,a,GARrCH,IAAMC,WCuCZG,E,YArCX,WAAYvB,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,WAAY,GACZC,MAAO,GACPmB,OAAQ,GAEZ,EAAKJ,UAAY,EAAKA,UAAUM,KAAf,gBAPH,E,uEASRtB,EAAYC,EAAMW,EAAGW,GAC3BX,EAAEY,iBACF,IACIJ,EAASnB,EADGD,EAAa,IAAOC,EAEpCG,KAAKC,SAAS,CACVL,WAAY,GACZC,MAAO,GACPmB,OAAQA,IAEZG,EAAUV,aAAa,aAAa,IACpCU,EAAUV,aAAa,QAAQ,M,+BAG/B,OACI,yBAAKP,UAAU,OACX,gCACI,2BACI,yBAAKA,UAAU,OAAOmB,OAAO,sBAAsBC,IAAI,sBAAsBC,MAAM,KAAKC,OAAO,QAEnG,wBAAItB,UAAU,SAAd,aAEJ,kBAAC,EAAD,CAAWN,WAAYI,KAAKL,MAAMC,WAAYC,MAAOG,KAAKL,MAAME,MAAOe,UAAWZ,KAAKY,UAAWH,aAAcT,KAAKS,eACrH,kBAAC,EAAD,CAAQO,OAAQhB,KAAKL,MAAMqB,c,GAhClBH,IAAMC,W,MCShBW,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.b349b499.chunk.js","sourcesContent":["// Components/Converter\r\nimport React from \"react\";\r\n\r\nclass Converter extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            percentage: \"\",\r\n            price: \"\",\r\n        }\r\n    }\r\n    inputHandler(key,value){\r\n        this.setState({\r\n            [key]: value\r\n        });\r\n    }\r\n    render(){\r\n        return(\r\n            <form className=\"converter\">\r\n                <label className=\"converter__label\" htmlFor=\"percentage\">What does</label>\r\n                <input value={this.state.percentage} className=\"converter__inputs\" id=\"percentage\" type=\"number\" placeholder=\"Enter percentage...\" onChange={e => this.inputHandler(\"percentage\",e.target.value)}/>\r\n                <label className=\"converter__label\" htmlFor=\"price\">of</label>\r\n                <input value={this.state.price} className=\"converter__inputs\" id=\"price\" type=\"number\" placeholder=\"Enter the price... \" onChange={e => this.inputHandler(\"price\",e.target.value)}/>\r\n                <button className=\"converter__btn\" onClick={e => this.props.calculate(this.state.percentage, this.state.price, e, this)}>Calculate</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Converter","import React from 'react';\r\n\r\nclass Result extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"result\">\r\n                <p className=\"result__text\">The price is</p>\r\n                <p className=\"result__number\">{this.props.result}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Result","import React from \"react\";\r\nimport Converter from '../converter/index.jsx'\r\nimport Result from '../result/index.jsx'\r\nclass ConvertApp extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            percentage: \"\",\r\n            price: \"\",\r\n            result: 0,\r\n        }\r\n        this.calculate = this.calculate.bind(this);\r\n    }\r\n    calculate(percentage, price,e, inputThis){\r\n        e.preventDefault()\r\n        var discount = (percentage / 100) * price;\r\n        var result = price - discount;\r\n        this.setState({\r\n            percentage: \"\",\r\n            price: \"\",\r\n            result: result,\r\n        })\r\n        inputThis.inputHandler(\"percentage\",\"\");\r\n        inputThis.inputHandler(\"price\",\"\");\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"App\">\r\n                <header>\r\n                    <a>\r\n                        <img className=\"logo\" srcSet=\"./img/logoBlack.svg\" src=\"./img/logoBlack.png\" width=\"27\" height=\"22\"></img>\r\n                    </a>\r\n                    <h1 className=\"title\">Sales&Go</h1>\r\n                </header>\r\n                <Converter percentage={this.state.percentage} price={this.state.price} calculate={this.calculate} inputHandler={this.inputHandler} />\r\n                <Result result={this.state.result} />\r\n            </div>        \r\n        )\r\n    }\r\n}\r\n\r\nexport default ConvertApp","import React from 'react';\nimport ConvertApp from \"./components/convertApp/index.jsx\"\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <ConvertApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}